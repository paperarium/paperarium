# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
# input AMPLIFY { globalAuthRule: AuthRule = { allow: public } } # FOR TESTING ONLY!

type User
  @model
  @searchable
  @auth(
    rules: [
      { allow: public, operations: [read] }
      { allow: owner, operations: [read, update, delete] }
      { allow: groups, groups: ["Admins"] }
    ]
  ) {
  username: String!
  email: String @auth(rules: [{ allow: owner }])
  papercrafts: [Papercraft!]! @hasMany
  builds: [Build!]! @hasMany
  profile_picture: S3Object
  description: String
  website: String
  instagram: String
  twitter: String
}

type Papercraft
  @model
  @searchable
  @auth(
    rules: [
      { allow: public, operations: [read] }
      { allow: groups, groups: ["Admins"] }
      { allow: owner }
    ]
  ) {
  user: User! @belongsTo
  glb: S3Object
  pdo: S3Object
  pdf_lineless: S3Object
  pdf_lined: S3Object!
  tags: [Tag!]! @manyToMany(relationName: "PapercraftTags")
  builds: [Build!]! @hasMany
  verified: Boolean
}

type Build
  @model
  @searchable
  @auth(
    rules: [
      { allow: public, operations: [read] }
      { allow: groups, groups: ["Admins"] }
      { allow: owner }
    ]
  ) {
  user: User! @belongsTo
  papercraft: Papercraft @belongsTo
  pictures: [S3Object!]!
  verified: Boolean
}

type Tag
  @model
  @searchable
  @auth(
    rules: [
      { allow: public, operations: [read] }
      { allow: groups, groups: ["Admins"] }
    ]
  ) {
  title: String!
  papercrafts: [Papercraft!]! @manyToMany(relationName: "PapercraftTags")
}

type S3Object {
  bucket: String!
  region: String!
  key: String!
}

type Color {
  r: Int!
  g: Int!
  b: Int!
}
