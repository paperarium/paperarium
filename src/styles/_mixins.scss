$background: var(--background-color);
$highlight: var(--highlight-color);
$highlight-2: var(--highlight-2-color);
$highlight-dark: var(--highlight-dark-color);
$highlight-very-dark: var(--highlight-very-dark-color);
$border: 1px solid #202020;

@mixin grid-background {
  background-image: linear-gradient(#101010 2px, transparent 2px),
    linear-gradient(90deg, #101010 2px, transparent 2px),
    linear-gradient(#101010 1px, transparent 1px),
    linear-gradient(90deg, #101010 1px, black 1px);
  background-size: 50px 50px, 50px 50px, 10px 10px, 10px 10px;
  background-position: -2px -2px, -2px -2px, -1px -1px, -1px -1px;
}

$breakpoints: (
  "xsmall": (
    min-width: 480px,
  ),
  "small": (
    min-width: 767px,
  ),
  "medium": (
    min-width: 992px,
  ),
  "large": (
    min-width: 1200px,
  ),
  "xl": (
    min-width: 1500px,
  ),
) !default;

/// Mixin to manage responsive breakpoints
/// @author Kitty Giraudel
/// @param {String} $breakpoint - Breakpoint name
/// @require $breakpoints
@mixin respond-to($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media #{inspect(map-get($breakpoints, $breakpoint))} {
      @content;
    }
  }

  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}
