/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/': {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  '/builds_likes': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.builds_likes.id'];
          created_at?: parameters['rowFilter.builds_likes.created_at'];
          user_id?: parameters['rowFilter.builds_likes.user_id'];
          build_id?: parameters['rowFilter.builds_likes.build_id'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['builds_likes'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** builds_likes */
          builds_likes?: definitions['builds_likes'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.builds_likes.id'];
          created_at?: parameters['rowFilter.builds_likes.created_at'];
          user_id?: parameters['rowFilter.builds_likes.user_id'];
          build_id?: parameters['rowFilter.builds_likes.build_id'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.builds_likes.id'];
          created_at?: parameters['rowFilter.builds_likes.created_at'];
          user_id?: parameters['rowFilter.builds_likes.user_id'];
          build_id?: parameters['rowFilter.builds_likes.build_id'];
        };
        body: {
          /** builds_likes */
          builds_likes?: definitions['builds_likes'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  '/papercrafts_view': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.papercrafts_view.id'];
          created_at?: parameters['rowFilter.papercrafts_view.created_at'];
          updated_at?: parameters['rowFilter.papercrafts_view.updated_at'];
          user_id?: parameters['rowFilter.papercrafts_view.user_id'];
          title?: parameters['rowFilter.papercrafts_view.title'];
          description?: parameters['rowFilter.papercrafts_view.description'];
          pictures?: parameters['rowFilter.papercrafts_view.pictures'];
          difficulty?: parameters['rowFilter.papercrafts_view.difficulty'];
          dimensions_cm?: parameters['rowFilter.papercrafts_view.dimensions_cm'];
          verified?: parameters['rowFilter.papercrafts_view.verified'];
          pdo_url?: parameters['rowFilter.papercrafts_view.pdo_url'];
          pdf_lineless_url?: parameters['rowFilter.papercrafts_view.pdf_lineless_url'];
          pdf_lined_url?: parameters['rowFilter.papercrafts_view.pdf_lined_url'];
          glb_url?: parameters['rowFilter.papercrafts_view.glb_url'];
          xlink?: parameters['rowFilter.papercrafts_view.xlink'];
          build_id?: parameters['rowFilter.papercrafts_view.build_id'];
          collective_id?: parameters['rowFilter.papercrafts_view.collective_id'];
          n_builds?: parameters['rowFilter.papercrafts_view.n_builds'];
          n_likes?: parameters['rowFilter.papercrafts_view.n_likes'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['papercrafts_view'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
  };
  '/papercrafts_variants': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.papercrafts_variants.id'];
          created_at?: parameters['rowFilter.papercrafts_variants.created_at'];
          title?: parameters['rowFilter.papercrafts_variants.title'];
          papercraft_id?: parameters['rowFilter.papercrafts_variants.papercraft_id'];
          pdo_url?: parameters['rowFilter.papercrafts_variants.pdo_url'];
          pdf_lineless_url?: parameters['rowFilter.papercrafts_variants.pdf_lineless_url'];
          pdf_lined_url?: parameters['rowFilter.papercrafts_variants.pdf_lined_url'];
          user_id?: parameters['rowFilter.papercrafts_variants.user_id'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['papercrafts_variants'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** papercrafts_variants */
          papercrafts_variants?: definitions['papercrafts_variants'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.papercrafts_variants.id'];
          created_at?: parameters['rowFilter.papercrafts_variants.created_at'];
          title?: parameters['rowFilter.papercrafts_variants.title'];
          papercraft_id?: parameters['rowFilter.papercrafts_variants.papercraft_id'];
          pdo_url?: parameters['rowFilter.papercrafts_variants.pdo_url'];
          pdf_lineless_url?: parameters['rowFilter.papercrafts_variants.pdf_lineless_url'];
          pdf_lined_url?: parameters['rowFilter.papercrafts_variants.pdf_lined_url'];
          user_id?: parameters['rowFilter.papercrafts_variants.user_id'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.papercrafts_variants.id'];
          created_at?: parameters['rowFilter.papercrafts_variants.created_at'];
          title?: parameters['rowFilter.papercrafts_variants.title'];
          papercraft_id?: parameters['rowFilter.papercrafts_variants.papercraft_id'];
          pdo_url?: parameters['rowFilter.papercrafts_variants.pdo_url'];
          pdf_lineless_url?: parameters['rowFilter.papercrafts_variants.pdf_lineless_url'];
          pdf_lined_url?: parameters['rowFilter.papercrafts_variants.pdf_lined_url'];
          user_id?: parameters['rowFilter.papercrafts_variants.user_id'];
        };
        body: {
          /** papercrafts_variants */
          papercrafts_variants?: definitions['papercrafts_variants'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  '/papercrafts_tags': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.papercrafts_tags.id'];
          papercraft_id?: parameters['rowFilter.papercrafts_tags.papercraft_id'];
          tag_id?: parameters['rowFilter.papercrafts_tags.tag_id'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['papercrafts_tags'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** papercrafts_tags */
          papercrafts_tags?: definitions['papercrafts_tags'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.papercrafts_tags.id'];
          papercraft_id?: parameters['rowFilter.papercrafts_tags.papercraft_id'];
          tag_id?: parameters['rowFilter.papercrafts_tags.tag_id'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.papercrafts_tags.id'];
          papercraft_id?: parameters['rowFilter.papercrafts_tags.papercraft_id'];
          tag_id?: parameters['rowFilter.papercrafts_tags.tag_id'];
        };
        body: {
          /** papercrafts_tags */
          papercrafts_tags?: definitions['papercrafts_tags'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  '/tags_view': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.tags_view.id'];
          name?: parameters['rowFilter.tags_view.name'];
          code?: parameters['rowFilter.tags_view.code'];
          n_papercrafts?: parameters['rowFilter.tags_view.n_papercrafts'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['tags_view'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
  };
  '/collectives_followers': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.collectives_followers.id'];
          created_at?: parameters['rowFilter.collectives_followers.created_at'];
          collective_id?: parameters['rowFilter.collectives_followers.collective_id'];
          user_id?: parameters['rowFilter.collectives_followers.user_id'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['collectives_followers'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** collectives_followers */
          collectives_followers?: definitions['collectives_followers'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.collectives_followers.id'];
          created_at?: parameters['rowFilter.collectives_followers.created_at'];
          collective_id?: parameters['rowFilter.collectives_followers.collective_id'];
          user_id?: parameters['rowFilter.collectives_followers.user_id'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.collectives_followers.id'];
          created_at?: parameters['rowFilter.collectives_followers.created_at'];
          collective_id?: parameters['rowFilter.collectives_followers.collective_id'];
          user_id?: parameters['rowFilter.collectives_followers.user_id'];
        };
        body: {
          /** collectives_followers */
          collectives_followers?: definitions['collectives_followers'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  '/builds': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.builds.id'];
          created_at?: parameters['rowFilter.builds.created_at'];
          updated_at?: parameters['rowFilter.builds.updated_at'];
          user_id?: parameters['rowFilter.builds.user_id'];
          papercraft_id?: parameters['rowFilter.builds.papercraft_id'];
          pictures?: parameters['rowFilter.builds.pictures'];
          description?: parameters['rowFilter.builds.description'];
          verified?: parameters['rowFilter.builds.verified'];
          xlink?: parameters['rowFilter.builds.xlink'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['builds'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** builds */
          builds?: definitions['builds'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.builds.id'];
          created_at?: parameters['rowFilter.builds.created_at'];
          updated_at?: parameters['rowFilter.builds.updated_at'];
          user_id?: parameters['rowFilter.builds.user_id'];
          papercraft_id?: parameters['rowFilter.builds.papercraft_id'];
          pictures?: parameters['rowFilter.builds.pictures'];
          description?: parameters['rowFilter.builds.description'];
          verified?: parameters['rowFilter.builds.verified'];
          xlink?: parameters['rowFilter.builds.xlink'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.builds.id'];
          created_at?: parameters['rowFilter.builds.created_at'];
          updated_at?: parameters['rowFilter.builds.updated_at'];
          user_id?: parameters['rowFilter.builds.user_id'];
          papercraft_id?: parameters['rowFilter.builds.papercraft_id'];
          pictures?: parameters['rowFilter.builds.pictures'];
          description?: parameters['rowFilter.builds.description'];
          verified?: parameters['rowFilter.builds.verified'];
          xlink?: parameters['rowFilter.builds.xlink'];
        };
        body: {
          /** builds */
          builds?: definitions['builds'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  '/papercrafts_likes': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.papercrafts_likes.id'];
          created_at?: parameters['rowFilter.papercrafts_likes.created_at'];
          user_id?: parameters['rowFilter.papercrafts_likes.user_id'];
          papercraft_id?: parameters['rowFilter.papercrafts_likes.papercraft_id'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['papercrafts_likes'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** papercrafts_likes */
          papercrafts_likes?: definitions['papercrafts_likes'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.papercrafts_likes.id'];
          created_at?: parameters['rowFilter.papercrafts_likes.created_at'];
          user_id?: parameters['rowFilter.papercrafts_likes.user_id'];
          papercraft_id?: parameters['rowFilter.papercrafts_likes.papercraft_id'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.papercrafts_likes.id'];
          created_at?: parameters['rowFilter.papercrafts_likes.created_at'];
          user_id?: parameters['rowFilter.papercrafts_likes.user_id'];
          papercraft_id?: parameters['rowFilter.papercrafts_likes.papercraft_id'];
        };
        body: {
          /** papercrafts_likes */
          papercrafts_likes?: definitions['papercrafts_likes'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  '/collectives': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.collectives.id'];
          created_at?: parameters['rowFilter.collectives.created_at'];
          title?: parameters['rowFilter.collectives.title'];
          description?: parameters['rowFilter.collectives.description'];
          titlecode?: parameters['rowFilter.collectives.titlecode'];
          xlink?: parameters['rowFilter.collectives.xlink'];
          avatar_url?: parameters['rowFilter.collectives.avatar_url'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['collectives'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** collectives */
          collectives?: definitions['collectives'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.collectives.id'];
          created_at?: parameters['rowFilter.collectives.created_at'];
          title?: parameters['rowFilter.collectives.title'];
          description?: parameters['rowFilter.collectives.description'];
          titlecode?: parameters['rowFilter.collectives.titlecode'];
          xlink?: parameters['rowFilter.collectives.xlink'];
          avatar_url?: parameters['rowFilter.collectives.avatar_url'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.collectives.id'];
          created_at?: parameters['rowFilter.collectives.created_at'];
          title?: parameters['rowFilter.collectives.title'];
          description?: parameters['rowFilter.collectives.description'];
          titlecode?: parameters['rowFilter.collectives.titlecode'];
          xlink?: parameters['rowFilter.collectives.xlink'];
          avatar_url?: parameters['rowFilter.collectives.avatar_url'];
        };
        body: {
          /** collectives */
          collectives?: definitions['collectives'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  '/papercrafts': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.papercrafts.id'];
          created_at?: parameters['rowFilter.papercrafts.created_at'];
          updated_at?: parameters['rowFilter.papercrafts.updated_at'];
          user_id?: parameters['rowFilter.papercrafts.user_id'];
          title?: parameters['rowFilter.papercrafts.title'];
          description?: parameters['rowFilter.papercrafts.description'];
          pictures?: parameters['rowFilter.papercrafts.pictures'];
          difficulty?: parameters['rowFilter.papercrafts.difficulty'];
          dimensions_cm?: parameters['rowFilter.papercrafts.dimensions_cm'];
          verified?: parameters['rowFilter.papercrafts.verified'];
          pdo_url?: parameters['rowFilter.papercrafts.pdo_url'];
          pdf_lineless_url?: parameters['rowFilter.papercrafts.pdf_lineless_url'];
          pdf_lined_url?: parameters['rowFilter.papercrafts.pdf_lined_url'];
          glb_url?: parameters['rowFilter.papercrafts.glb_url'];
          xlink?: parameters['rowFilter.papercrafts.xlink'];
          build_id?: parameters['rowFilter.papercrafts.build_id'];
          collective_id?: parameters['rowFilter.papercrafts.collective_id'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['papercrafts'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** papercrafts */
          papercrafts?: definitions['papercrafts'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.papercrafts.id'];
          created_at?: parameters['rowFilter.papercrafts.created_at'];
          updated_at?: parameters['rowFilter.papercrafts.updated_at'];
          user_id?: parameters['rowFilter.papercrafts.user_id'];
          title?: parameters['rowFilter.papercrafts.title'];
          description?: parameters['rowFilter.papercrafts.description'];
          pictures?: parameters['rowFilter.papercrafts.pictures'];
          difficulty?: parameters['rowFilter.papercrafts.difficulty'];
          dimensions_cm?: parameters['rowFilter.papercrafts.dimensions_cm'];
          verified?: parameters['rowFilter.papercrafts.verified'];
          pdo_url?: parameters['rowFilter.papercrafts.pdo_url'];
          pdf_lineless_url?: parameters['rowFilter.papercrafts.pdf_lineless_url'];
          pdf_lined_url?: parameters['rowFilter.papercrafts.pdf_lined_url'];
          glb_url?: parameters['rowFilter.papercrafts.glb_url'];
          xlink?: parameters['rowFilter.papercrafts.xlink'];
          build_id?: parameters['rowFilter.papercrafts.build_id'];
          collective_id?: parameters['rowFilter.papercrafts.collective_id'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.papercrafts.id'];
          created_at?: parameters['rowFilter.papercrafts.created_at'];
          updated_at?: parameters['rowFilter.papercrafts.updated_at'];
          user_id?: parameters['rowFilter.papercrafts.user_id'];
          title?: parameters['rowFilter.papercrafts.title'];
          description?: parameters['rowFilter.papercrafts.description'];
          pictures?: parameters['rowFilter.papercrafts.pictures'];
          difficulty?: parameters['rowFilter.papercrafts.difficulty'];
          dimensions_cm?: parameters['rowFilter.papercrafts.dimensions_cm'];
          verified?: parameters['rowFilter.papercrafts.verified'];
          pdo_url?: parameters['rowFilter.papercrafts.pdo_url'];
          pdf_lineless_url?: parameters['rowFilter.papercrafts.pdf_lineless_url'];
          pdf_lined_url?: parameters['rowFilter.papercrafts.pdf_lined_url'];
          glb_url?: parameters['rowFilter.papercrafts.glb_url'];
          xlink?: parameters['rowFilter.papercrafts.xlink'];
          build_id?: parameters['rowFilter.papercrafts.build_id'];
          collective_id?: parameters['rowFilter.papercrafts.collective_id'];
        };
        body: {
          /** papercrafts */
          papercrafts?: definitions['papercrafts'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  '/profiles_view': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.profiles_view.id'];
          updated_at?: parameters['rowFilter.profiles_view.updated_at'];
          username?: parameters['rowFilter.profiles_view.username'];
          website?: parameters['rowFilter.profiles_view.website'];
          about?: parameters['rowFilter.profiles_view.about'];
          avatar_url?: parameters['rowFilter.profiles_view.avatar_url'];
          created_at?: parameters['rowFilter.profiles_view.created_at'];
          name?: parameters['rowFilter.profiles_view.name'];
          archived?: parameters['rowFilter.profiles_view.archived'];
          is_default?: parameters['rowFilter.profiles_view.is_default'];
          n_papercrafts?: parameters['rowFilter.profiles_view.n_papercrafts'];
          n_builds?: parameters['rowFilter.profiles_view.n_builds'];
          n_followers?: parameters['rowFilter.profiles_view.n_followers'];
          n_following?: parameters['rowFilter.profiles_view.n_following'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['profiles_view'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
  };
  '/collectives_profiles': {
    get: {
      parameters: {
        query: {
          profile_id?: parameters['rowFilter.collectives_profiles.profile_id'];
          collective_id?: parameters['rowFilter.collectives_profiles.collective_id'];
          id?: parameters['rowFilter.collectives_profiles.id'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['collectives_profiles'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** collectives_profiles */
          collectives_profiles?: definitions['collectives_profiles'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          profile_id?: parameters['rowFilter.collectives_profiles.profile_id'];
          collective_id?: parameters['rowFilter.collectives_profiles.collective_id'];
          id?: parameters['rowFilter.collectives_profiles.id'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          profile_id?: parameters['rowFilter.collectives_profiles.profile_id'];
          collective_id?: parameters['rowFilter.collectives_profiles.collective_id'];
          id?: parameters['rowFilter.collectives_profiles.id'];
        };
        body: {
          /** collectives_profiles */
          collectives_profiles?: definitions['collectives_profiles'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  '/collectives_view': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.collectives_view.id'];
          created_at?: parameters['rowFilter.collectives_view.created_at'];
          title?: parameters['rowFilter.collectives_view.title'];
          description?: parameters['rowFilter.collectives_view.description'];
          titlecode?: parameters['rowFilter.collectives_view.titlecode'];
          xlink?: parameters['rowFilter.collectives_view.xlink'];
          avatar_url?: parameters['rowFilter.collectives_view.avatar_url'];
          n_papercrafts?: parameters['rowFilter.collectives_view.n_papercrafts'];
          n_builds?: parameters['rowFilter.collectives_view.n_builds'];
          n_followers?: parameters['rowFilter.collectives_view.n_followers'];
          n_members?: parameters['rowFilter.collectives_view.n_members'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['collectives_view'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
  };
  '/profiles': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.profiles.id'];
          updated_at?: parameters['rowFilter.profiles.updated_at'];
          username?: parameters['rowFilter.profiles.username'];
          website?: parameters['rowFilter.profiles.website'];
          about?: parameters['rowFilter.profiles.about'];
          avatar_url?: parameters['rowFilter.profiles.avatar_url'];
          created_at?: parameters['rowFilter.profiles.created_at'];
          name?: parameters['rowFilter.profiles.name'];
          /** whether or not this user is an archive page */
          archived?: parameters['rowFilter.profiles.archived'];
          is_default?: parameters['rowFilter.profiles.is_default'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['profiles'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** profiles */
          profiles?: definitions['profiles'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.profiles.id'];
          updated_at?: parameters['rowFilter.profiles.updated_at'];
          username?: parameters['rowFilter.profiles.username'];
          website?: parameters['rowFilter.profiles.website'];
          about?: parameters['rowFilter.profiles.about'];
          avatar_url?: parameters['rowFilter.profiles.avatar_url'];
          created_at?: parameters['rowFilter.profiles.created_at'];
          name?: parameters['rowFilter.profiles.name'];
          /** whether or not this user is an archive page */
          archived?: parameters['rowFilter.profiles.archived'];
          is_default?: parameters['rowFilter.profiles.is_default'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.profiles.id'];
          updated_at?: parameters['rowFilter.profiles.updated_at'];
          username?: parameters['rowFilter.profiles.username'];
          website?: parameters['rowFilter.profiles.website'];
          about?: parameters['rowFilter.profiles.about'];
          avatar_url?: parameters['rowFilter.profiles.avatar_url'];
          created_at?: parameters['rowFilter.profiles.created_at'];
          name?: parameters['rowFilter.profiles.name'];
          /** whether or not this user is an archive page */
          archived?: parameters['rowFilter.profiles.archived'];
          is_default?: parameters['rowFilter.profiles.is_default'];
        };
        body: {
          /** profiles */
          profiles?: definitions['profiles'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  '/builds_view': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.builds_view.id'];
          created_at?: parameters['rowFilter.builds_view.created_at'];
          updated_at?: parameters['rowFilter.builds_view.updated_at'];
          user_id?: parameters['rowFilter.builds_view.user_id'];
          papercraft_id?: parameters['rowFilter.builds_view.papercraft_id'];
          pictures?: parameters['rowFilter.builds_view.pictures'];
          description?: parameters['rowFilter.builds_view.description'];
          verified?: parameters['rowFilter.builds_view.verified'];
          xlink?: parameters['rowFilter.builds_view.xlink'];
          n_likes?: parameters['rowFilter.builds_view.n_likes'];
          collective_titlecode?: parameters['rowFilter.builds_view.collective_titlecode'];
          collective_id?: parameters['rowFilter.builds_view.collective_id'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['builds_view'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
  };
  '/admins': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.admins.id'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['admins'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** admins */
          admins?: definitions['admins'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.admins.id'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.admins.id'];
        };
        body: {
          /** admins */
          admins?: definitions['admins'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  '/tags': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.tags.id'];
          name?: parameters['rowFilter.tags.name'];
          code?: parameters['rowFilter.tags.code'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['tags'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** tags */
          tags?: definitions['tags'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.tags.id'];
          name?: parameters['rowFilter.tags.name'];
          code?: parameters['rowFilter.tags.code'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.tags.id'];
          name?: parameters['rowFilter.tags.name'];
          code?: parameters['rowFilter.tags.code'];
        };
        body: {
          /** tags */
          tags?: definitions['tags'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  '/announcements': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.announcements.id'];
          created_at?: parameters['rowFilter.announcements.created_at'];
          active?: parameters['rowFilter.announcements.active'];
          text?: parameters['rowFilter.announcements.text'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['announcements'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** announcements */
          announcements?: definitions['announcements'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.announcements.id'];
          created_at?: parameters['rowFilter.announcements.created_at'];
          active?: parameters['rowFilter.announcements.active'];
          text?: parameters['rowFilter.announcements.text'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.announcements.id'];
          created_at?: parameters['rowFilter.announcements.created_at'];
          active?: parameters['rowFilter.announcements.active'];
          text?: parameters['rowFilter.announcements.text'];
        };
        body: {
          /** announcements */
          announcements?: definitions['announcements'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  '/profiles_followers': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.profiles_followers.id'];
          created_at?: parameters['rowFilter.profiles_followers.created_at'];
          user_id?: parameters['rowFilter.profiles_followers.user_id'];
          following_id?: parameters['rowFilter.profiles_followers.following_id'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['profiles_followers'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** profiles_followers */
          profiles_followers?: definitions['profiles_followers'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.profiles_followers.id'];
          created_at?: parameters['rowFilter.profiles_followers.created_at'];
          user_id?: parameters['rowFilter.profiles_followers.user_id'];
          following_id?: parameters['rowFilter.profiles_followers.following_id'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.profiles_followers.id'];
          created_at?: parameters['rowFilter.profiles_followers.created_at'];
          user_id?: parameters['rowFilter.profiles_followers.user_id'];
          following_id?: parameters['rowFilter.profiles_followers.following_id'];
        };
        body: {
          /** profiles_followers */
          profiles_followers?: definitions['profiles_followers'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  '/rpc/search_profiles': {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: character varying */
            username_term: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferParams'];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  '/rpc/show_limit': {
    post: {
      parameters: {
        body: {
          args: { [key: string]: unknown };
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferParams'];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  '/rpc/random_string': {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: integer */
            length: number;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferParams'];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  '/rpc/show_trgm': {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: text */
            '': string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferParams'];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  '/rpc/search_tags_user': {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: uuid */
            p_user_id: string;
            /** Format: character varying */
            tag_term: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferParams'];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  '/rpc/generate_user': {
    post: {
      parameters: {
        body: {
          args: { [key: string]: unknown };
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferParams'];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  '/rpc/get_is_admin': {
    post: {
      parameters: {
        body: {
          args: { [key: string]: unknown };
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferParams'];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  '/rpc/search_tags': {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: character varying */
            tag_term: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferParams'];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  '/rpc/search_papercrafts': {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: character varying */
            papercraft_term: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferParams'];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  '/rpc/search_collectives': {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: character varying */
            collective_term: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferParams'];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  '/rpc/search_tags_collective': {
    post: {
      parameters: {
        body: {
          args: {
            /** Format: text */
            p_collective_titlecode: string;
            /** Format: character varying */
            tag_term: string;
          };
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferParams'];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  '/rpc/list_tags': {
    post: {
      parameters: {
        body: {
          args: { [key: string]: unknown };
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferParams'];
        };
      };
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
}

export interface definitions {
  /** @description Users' likes on builds */
  builds_likes: {
    /** Format: bigint */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    user_id: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `builds.id`.<fk table='builds' column='id'/>
     */
    build_id: string;
  };
  papercrafts_view: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id?: string;
    /** Format: timestamp with time zone */
    created_at?: string;
    /** Format: timestamp with time zone */
    updated_at?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    user_id?: string;
    /** Format: text */
    title?: string;
    /** Format: text */
    description?: string;
    /** Format: ARRAY */
    pictures?: unknown[];
    /** Format: smallint */
    difficulty?: number;
    /** Format: ARRAY */
    dimensions_cm?: unknown[];
    /** Format: boolean */
    verified?: boolean;
    /** Format: text */
    pdo_url?: string;
    /** Format: text */
    pdf_lineless_url?: string;
    /** Format: text */
    pdf_lined_url?: string;
    /** Format: text */
    glb_url?: string;
    /** Format: text */
    xlink?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `builds.id`.<fk table='builds' column='id'/>
     */
    build_id?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `builds_view.collective_id`.<fk table='builds_view' column='collective_id'/>
     */
    collective_id?: number;
    /** Format: bigint */
    n_builds?: number;
    /** Format: bigint */
    n_likes?: number;
  };
  /** @description Allows multiple file uploads of a papercraft */
  papercrafts_variants: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at: string;
    /** Format: text */
    title: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `papercrafts.id`.<fk table='papercrafts' column='id'/>
     */
    papercraft_id: string;
    /** Format: text */
    pdo_url?: string;
    /** Format: text */
    pdf_lineless_url?: string;
    /** Format: text */
    pdf_lined_url?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    user_id: string;
  };
  /** @description Join table for papercrafts' tags */
  papercrafts_tags: {
    /** Format: bigint */
    id: number;
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `papercrafts.id`.<fk table='papercrafts' column='id'/>
     */
    papercraft_id: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `tags.id`.<fk table='tags' column='id'/>
     */
    tag_id: number;
  };
  tags_view: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id?: number;
    /** Format: text */
    name?: string;
    /** Format: text */
    code?: string;
    /** Format: bigint */
    n_papercrafts?: number;
  };
  /** @description Join table for linking collectives to profiles */
  collectives_followers: {
    /** Format: bigint */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `builds_view.collective_id`.<fk table='builds_view' column='collective_id'/>
     */
    collective_id: number;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    user_id?: string;
  };
  /** @description An index of all builds uploaded to our site */
  builds: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    user_id?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `papercrafts.id`.<fk table='papercrafts' column='id'/>
     */
    papercraft_id: string;
    /** Format: ARRAY */
    pictures: unknown[];
    /** Format: text */
    description?: string;
    /**
     * Format: boolean
     * @default false
     */
    verified: boolean;
    /** Format: text */
    xlink?: string;
  };
  /** @description Users' likes of papercrafts */
  papercrafts_likes: {
    /** Format: bigint */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    user_id: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `papercrafts.id`.<fk table='papercrafts' column='id'/>
     */
    papercraft_id: string;
  };
  /** @description papercrafting collectives */
  collectives: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: text */
    title: string;
    /** Format: text */
    description?: string;
    /** Format: text */
    titlecode: string;
    /** Format: text */
    xlink?: string;
    /** Format: text */
    avatar_url?: string;
  };
  /** @description A table of all papercrafts uploaded to our site */
  papercrafts: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default extensions.uuid_generate_v4()
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    user_id: string;
    /** Format: text */
    title: string;
    /** Format: text */
    description?: string;
    /** Format: ARRAY */
    pictures: unknown[];
    /** Format: smallint */
    difficulty: number;
    /** Format: ARRAY */
    dimensions_cm?: unknown[];
    /**
     * Format: boolean
     * @default false
     */
    verified: boolean;
    /** Format: text */
    pdo_url?: string;
    /** Format: text */
    pdf_lineless_url?: string;
    /** Format: text */
    pdf_lined_url?: string;
    /** Format: text */
    glb_url?: string;
    /** Format: text */
    xlink?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `builds.id`.<fk table='builds' column='id'/>
     */
    build_id?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `builds_view.collective_id`.<fk table='builds_view' column='collective_id'/>
     */
    collective_id?: number;
  };
  profiles_view: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id?: string;
    /** Format: timestamp with time zone */
    updated_at?: string;
    /** Format: text */
    username?: string;
    /** Format: text */
    website?: string;
    /** Format: text */
    about?: string;
    /** Format: text */
    avatar_url?: string;
    /** Format: timestamp with time zone */
    created_at?: string;
    /** Format: text */
    name?: string;
    /** Format: boolean */
    archived?: boolean;
    /** Format: boolean */
    is_default?: boolean;
    /** Format: bigint */
    n_papercrafts?: number;
    /** Format: bigint */
    n_builds?: number;
    /** Format: bigint */
    n_followers?: number;
    /** Format: bigint */
    n_following?: number;
  };
  /** @description Join table linking profiles to collectives */
  collectives_profiles: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    profile_id: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `builds_view.collective_id`.<fk table='builds_view' column='collective_id'/>
     */
    collective_id: number;
    /** Format: bigint */
    id: number;
  };
  collectives_view: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id?: number;
    /** Format: timestamp with time zone */
    created_at?: string;
    /** Format: text */
    title?: string;
    /** Format: text */
    description?: string;
    /** Format: text */
    titlecode?: string;
    /** Format: text */
    xlink?: string;
    /** Format: text */
    avatar_url?: string;
    /** Format: bigint */
    n_papercrafts?: number;
    /** Format: bigint */
    n_builds?: number;
    /** Format: bigint */
    n_followers?: number;
    /** Format: bigint */
    n_members?: number;
  };
  profiles: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    updated_at: string;
    /** Format: text */
    username: string;
    /** Format: text */
    website?: string;
    /** Format: text */
    about?: string;
    /** Format: text */
    avatar_url?: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at: string;
    /** Format: text */
    name?: string;
    /**
     * Format: boolean
     * @description whether or not this user is an archive page
     * @default false
     */
    archived: boolean;
    /** Format: boolean */
    is_default: boolean;
  };
  builds_view: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id?: string;
    /** Format: timestamp with time zone */
    created_at?: string;
    /** Format: timestamp with time zone */
    updated_at?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    user_id?: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Foreign Key to `papercrafts.id`.<fk table='papercrafts' column='id'/>
     */
    papercraft_id?: string;
    /** Format: ARRAY */
    pictures?: unknown[];
    /** Format: text */
    description?: string;
    /** Format: boolean */
    verified?: boolean;
    /** Format: text */
    xlink?: string;
    /** Format: bigint */
    n_likes?: number;
    /** Format: text */
    collective_titlecode?: string;
    /** Format: bigint */
    collective_id?: number;
  };
  /** @description A table of admin users. */
  admins: {
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    id: string;
  };
  /** @description Tags for sorting papercrafts. */
  tags: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: text */
    name: string;
    /** Format: text */
    code: string;
  };
  /** @description A table of announcements */
  announcements: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at: string;
    /**
     * Format: boolean
     * @default true
     */
    active: boolean;
    /** Format: text */
    text: string;
  };
  /** @description Join table for followers of profiles */
  profiles_followers: {
    /** Format: bigint */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    user_id: string;
    /**
     * Format: uuid
     * @description Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `profiles.id`.<fk table='profiles' column='id'/>
     */
    following_id: string;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: 'params=single-object';
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: 'return=representation' | 'return=minimal' | 'return=none';
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: 'count=none';
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description builds_likes */
  'body.builds_likes': definitions['builds_likes'];
  /** Format: bigint */
  'rowFilter.builds_likes.id': string;
  /** Format: timestamp with time zone */
  'rowFilter.builds_likes.created_at': string;
  /** Format: uuid */
  'rowFilter.builds_likes.user_id': string;
  /** Format: uuid */
  'rowFilter.builds_likes.build_id': string;
  /** @description papercrafts_view */
  'body.papercrafts_view': definitions['papercrafts_view'];
  /** Format: uuid */
  'rowFilter.papercrafts_view.id': string;
  /** Format: timestamp with time zone */
  'rowFilter.papercrafts_view.created_at': string;
  /** Format: timestamp with time zone */
  'rowFilter.papercrafts_view.updated_at': string;
  /** Format: uuid */
  'rowFilter.papercrafts_view.user_id': string;
  /** Format: text */
  'rowFilter.papercrafts_view.title': string;
  /** Format: text */
  'rowFilter.papercrafts_view.description': string;
  /** Format: ARRAY */
  'rowFilter.papercrafts_view.pictures': string;
  /** Format: smallint */
  'rowFilter.papercrafts_view.difficulty': string;
  /** Format: ARRAY */
  'rowFilter.papercrafts_view.dimensions_cm': string;
  /** Format: boolean */
  'rowFilter.papercrafts_view.verified': string;
  /** Format: text */
  'rowFilter.papercrafts_view.pdo_url': string;
  /** Format: text */
  'rowFilter.papercrafts_view.pdf_lineless_url': string;
  /** Format: text */
  'rowFilter.papercrafts_view.pdf_lined_url': string;
  /** Format: text */
  'rowFilter.papercrafts_view.glb_url': string;
  /** Format: text */
  'rowFilter.papercrafts_view.xlink': string;
  /** Format: uuid */
  'rowFilter.papercrafts_view.build_id': string;
  /** Format: bigint */
  'rowFilter.papercrafts_view.collective_id': string;
  /** Format: bigint */
  'rowFilter.papercrafts_view.n_builds': string;
  /** Format: bigint */
  'rowFilter.papercrafts_view.n_likes': string;
  /** @description papercrafts_variants */
  'body.papercrafts_variants': definitions['papercrafts_variants'];
  /** Format: bigint */
  'rowFilter.papercrafts_variants.id': string;
  /** Format: timestamp with time zone */
  'rowFilter.papercrafts_variants.created_at': string;
  /** Format: text */
  'rowFilter.papercrafts_variants.title': string;
  /** Format: uuid */
  'rowFilter.papercrafts_variants.papercraft_id': string;
  /** Format: text */
  'rowFilter.papercrafts_variants.pdo_url': string;
  /** Format: text */
  'rowFilter.papercrafts_variants.pdf_lineless_url': string;
  /** Format: text */
  'rowFilter.papercrafts_variants.pdf_lined_url': string;
  /** Format: uuid */
  'rowFilter.papercrafts_variants.user_id': string;
  /** @description papercrafts_tags */
  'body.papercrafts_tags': definitions['papercrafts_tags'];
  /** Format: bigint */
  'rowFilter.papercrafts_tags.id': string;
  /** Format: uuid */
  'rowFilter.papercrafts_tags.papercraft_id': string;
  /** Format: bigint */
  'rowFilter.papercrafts_tags.tag_id': string;
  /** @description tags_view */
  'body.tags_view': definitions['tags_view'];
  /** Format: bigint */
  'rowFilter.tags_view.id': string;
  /** Format: text */
  'rowFilter.tags_view.name': string;
  /** Format: text */
  'rowFilter.tags_view.code': string;
  /** Format: bigint */
  'rowFilter.tags_view.n_papercrafts': string;
  /** @description collectives_followers */
  'body.collectives_followers': definitions['collectives_followers'];
  /** Format: bigint */
  'rowFilter.collectives_followers.id': string;
  /** Format: timestamp with time zone */
  'rowFilter.collectives_followers.created_at': string;
  /** Format: bigint */
  'rowFilter.collectives_followers.collective_id': string;
  /** Format: uuid */
  'rowFilter.collectives_followers.user_id': string;
  /** @description builds */
  'body.builds': definitions['builds'];
  /** Format: uuid */
  'rowFilter.builds.id': string;
  /** Format: timestamp with time zone */
  'rowFilter.builds.created_at': string;
  /** Format: timestamp with time zone */
  'rowFilter.builds.updated_at': string;
  /** Format: uuid */
  'rowFilter.builds.user_id': string;
  /** Format: uuid */
  'rowFilter.builds.papercraft_id': string;
  /** Format: ARRAY */
  'rowFilter.builds.pictures': string;
  /** Format: text */
  'rowFilter.builds.description': string;
  /** Format: boolean */
  'rowFilter.builds.verified': string;
  /** Format: text */
  'rowFilter.builds.xlink': string;
  /** @description papercrafts_likes */
  'body.papercrafts_likes': definitions['papercrafts_likes'];
  /** Format: bigint */
  'rowFilter.papercrafts_likes.id': string;
  /** Format: timestamp with time zone */
  'rowFilter.papercrafts_likes.created_at': string;
  /** Format: uuid */
  'rowFilter.papercrafts_likes.user_id': string;
  /** Format: uuid */
  'rowFilter.papercrafts_likes.papercraft_id': string;
  /** @description collectives */
  'body.collectives': definitions['collectives'];
  /** Format: bigint */
  'rowFilter.collectives.id': string;
  /** Format: timestamp with time zone */
  'rowFilter.collectives.created_at': string;
  /** Format: text */
  'rowFilter.collectives.title': string;
  /** Format: text */
  'rowFilter.collectives.description': string;
  /** Format: text */
  'rowFilter.collectives.titlecode': string;
  /** Format: text */
  'rowFilter.collectives.xlink': string;
  /** Format: text */
  'rowFilter.collectives.avatar_url': string;
  /** @description papercrafts */
  'body.papercrafts': definitions['papercrafts'];
  /** Format: uuid */
  'rowFilter.papercrafts.id': string;
  /** Format: timestamp with time zone */
  'rowFilter.papercrafts.created_at': string;
  /** Format: timestamp with time zone */
  'rowFilter.papercrafts.updated_at': string;
  /** Format: uuid */
  'rowFilter.papercrafts.user_id': string;
  /** Format: text */
  'rowFilter.papercrafts.title': string;
  /** Format: text */
  'rowFilter.papercrafts.description': string;
  /** Format: ARRAY */
  'rowFilter.papercrafts.pictures': string;
  /** Format: smallint */
  'rowFilter.papercrafts.difficulty': string;
  /** Format: ARRAY */
  'rowFilter.papercrafts.dimensions_cm': string;
  /** Format: boolean */
  'rowFilter.papercrafts.verified': string;
  /** Format: text */
  'rowFilter.papercrafts.pdo_url': string;
  /** Format: text */
  'rowFilter.papercrafts.pdf_lineless_url': string;
  /** Format: text */
  'rowFilter.papercrafts.pdf_lined_url': string;
  /** Format: text */
  'rowFilter.papercrafts.glb_url': string;
  /** Format: text */
  'rowFilter.papercrafts.xlink': string;
  /** Format: uuid */
  'rowFilter.papercrafts.build_id': string;
  /** Format: bigint */
  'rowFilter.papercrafts.collective_id': string;
  /** @description profiles_view */
  'body.profiles_view': definitions['profiles_view'];
  /** Format: uuid */
  'rowFilter.profiles_view.id': string;
  /** Format: timestamp with time zone */
  'rowFilter.profiles_view.updated_at': string;
  /** Format: text */
  'rowFilter.profiles_view.username': string;
  /** Format: text */
  'rowFilter.profiles_view.website': string;
  /** Format: text */
  'rowFilter.profiles_view.about': string;
  /** Format: text */
  'rowFilter.profiles_view.avatar_url': string;
  /** Format: timestamp with time zone */
  'rowFilter.profiles_view.created_at': string;
  /** Format: text */
  'rowFilter.profiles_view.name': string;
  /** Format: boolean */
  'rowFilter.profiles_view.archived': string;
  /** Format: boolean */
  'rowFilter.profiles_view.is_default': string;
  /** Format: bigint */
  'rowFilter.profiles_view.n_papercrafts': string;
  /** Format: bigint */
  'rowFilter.profiles_view.n_builds': string;
  /** Format: bigint */
  'rowFilter.profiles_view.n_followers': string;
  /** Format: bigint */
  'rowFilter.profiles_view.n_following': string;
  /** @description collectives_profiles */
  'body.collectives_profiles': definitions['collectives_profiles'];
  /** Format: uuid */
  'rowFilter.collectives_profiles.profile_id': string;
  /** Format: bigint */
  'rowFilter.collectives_profiles.collective_id': string;
  /** Format: bigint */
  'rowFilter.collectives_profiles.id': string;
  /** @description collectives_view */
  'body.collectives_view': definitions['collectives_view'];
  /** Format: bigint */
  'rowFilter.collectives_view.id': string;
  /** Format: timestamp with time zone */
  'rowFilter.collectives_view.created_at': string;
  /** Format: text */
  'rowFilter.collectives_view.title': string;
  /** Format: text */
  'rowFilter.collectives_view.description': string;
  /** Format: text */
  'rowFilter.collectives_view.titlecode': string;
  /** Format: text */
  'rowFilter.collectives_view.xlink': string;
  /** Format: text */
  'rowFilter.collectives_view.avatar_url': string;
  /** Format: bigint */
  'rowFilter.collectives_view.n_papercrafts': string;
  /** Format: bigint */
  'rowFilter.collectives_view.n_builds': string;
  /** Format: bigint */
  'rowFilter.collectives_view.n_followers': string;
  /** Format: bigint */
  'rowFilter.collectives_view.n_members': string;
  /** @description profiles */
  'body.profiles': definitions['profiles'];
  /** Format: uuid */
  'rowFilter.profiles.id': string;
  /** Format: timestamp with time zone */
  'rowFilter.profiles.updated_at': string;
  /** Format: text */
  'rowFilter.profiles.username': string;
  /** Format: text */
  'rowFilter.profiles.website': string;
  /** Format: text */
  'rowFilter.profiles.about': string;
  /** Format: text */
  'rowFilter.profiles.avatar_url': string;
  /** Format: timestamp with time zone */
  'rowFilter.profiles.created_at': string;
  /** Format: text */
  'rowFilter.profiles.name': string;
  /**
   * Format: boolean
   * @description whether or not this user is an archive page
   */
  'rowFilter.profiles.archived': string;
  /** Format: boolean */
  'rowFilter.profiles.is_default': string;
  /** @description builds_view */
  'body.builds_view': definitions['builds_view'];
  /** Format: uuid */
  'rowFilter.builds_view.id': string;
  /** Format: timestamp with time zone */
  'rowFilter.builds_view.created_at': string;
  /** Format: timestamp with time zone */
  'rowFilter.builds_view.updated_at': string;
  /** Format: uuid */
  'rowFilter.builds_view.user_id': string;
  /** Format: uuid */
  'rowFilter.builds_view.papercraft_id': string;
  /** Format: ARRAY */
  'rowFilter.builds_view.pictures': string;
  /** Format: text */
  'rowFilter.builds_view.description': string;
  /** Format: boolean */
  'rowFilter.builds_view.verified': string;
  /** Format: text */
  'rowFilter.builds_view.xlink': string;
  /** Format: bigint */
  'rowFilter.builds_view.n_likes': string;
  /** Format: text */
  'rowFilter.builds_view.collective_titlecode': string;
  /** Format: bigint */
  'rowFilter.builds_view.collective_id': string;
  /** @description admins */
  'body.admins': definitions['admins'];
  /** Format: uuid */
  'rowFilter.admins.id': string;
  /** @description tags */
  'body.tags': definitions['tags'];
  /** Format: bigint */
  'rowFilter.tags.id': string;
  /** Format: text */
  'rowFilter.tags.name': string;
  /** Format: text */
  'rowFilter.tags.code': string;
  /** @description announcements */
  'body.announcements': definitions['announcements'];
  /** Format: bigint */
  'rowFilter.announcements.id': string;
  /** Format: timestamp with time zone */
  'rowFilter.announcements.created_at': string;
  /** Format: boolean */
  'rowFilter.announcements.active': string;
  /** Format: text */
  'rowFilter.announcements.text': string;
  /** @description profiles_followers */
  'body.profiles_followers': definitions['profiles_followers'];
  /** Format: bigint */
  'rowFilter.profiles_followers.id': string;
  /** Format: timestamp with time zone */
  'rowFilter.profiles_followers.created_at': string;
  /** Format: uuid */
  'rowFilter.profiles_followers.user_id': string;
  /** Format: uuid */
  'rowFilter.profiles_followers.following_id': string;
}

export interface operations {}

export interface external {}
